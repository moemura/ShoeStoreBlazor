---
description: 
globs: 
alwaysApply: true
---
# Project Structure Rules (Optimized)

## Backend (WebApp)
- wwwroot/: Static files (CSS, JS, images)
- Controllers/: API endpoints
- Data/: DbContext, EF Core configs
- Models/
  - Entities/: Domain models
  - DTOs/: Data Transfer Objects
  - Mapping/: AutoMapper profiles
- BlazorPages/: Admin UI (feature folders)
- Services/: Business logic (feature folders)
- Program.cs: App entry
- ServiceContainer.cs: Registry Service
- appsettings.json: Config

## Frontend (shoestore-react)
- public/: Static assets
- src/
  - assets/
  - components/
  - pages/
  - routes/
  - services/: API logic
  - App.jsx, main.jsx, index.css: Entrypoints

## Best Practices
- Feature-based folder structure for scalability.
- Keep code, assets, and configs organized by responsibility.
- No TypeScript in React project.
- Always sync API contract between frontend and backend.

